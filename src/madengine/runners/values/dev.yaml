# Development environment configuration
# Extends default.yaml with development-specific settings

# General configuration
environment: "dev"

# Workspace configuration
workspace:
  path: "/tmp/madengine_dev"
  owner: "developer"
  group: "developer"

# Execution configuration
execution:
  timeout: 3600  # 1 hour for dev
  keep_alive: true  # Keep containers alive for debugging
  live_output: true
  output_file: "dev_perf.csv"
  results_file: "dev_execution_results.json"
  generate_sys_env_details: true
  async_timeout: 7200  # 2 hours
  poll_interval: 10  # More frequent polling

# Data configuration
data_config:
  file: "dev_data.json"
  force_mirror_local: true  # Use local data for dev
  required: false

# Credentials configuration
credentials:
  file: "dev_credential.json"
  required: false

# Docker registry configuration
docker_registry:
  login_required: false
  username: "dev-user"
  password: ""

# Python configuration
python_dependencies:
  - jinja2
  - pyyaml
  - requests
  - pytest
  - black
  - mypy

# Installation configuration
install_dependencies: true

# Post-execution configuration
post_execution:
  cleanup: false  # Don't cleanup in dev
  collect_logs: true

# Logging configuration
logging:
  level: "DEBUG"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

logs:
  local_path: "./dev_logs"

# Ansible configuration
ansible:
  target_hosts: "dev_nodes"
  become: false

# Kubernetes configuration
k8s:
  namespace: "madengine-dev"
  
  # ConfigMap configuration
  configmap:
    name: "madengine-dev-config"
  
  # Job configuration
  job:
    name: "madengine-dev-execution"
    parallelism: 1
    completions: 1
    backoff_limit: 1  # Fail fast in dev
    active_deadline_seconds: 7200  # 2 hours
    restart_policy: "Never"
  
  # Container configuration
  container:
    image: "madengine/distributed-runner:dev"
    image_pull_policy: "Always"  # Always pull latest dev image
    security_context:
      run_as_user: 1000
      run_as_group: 1000
      privileged: false
    health_checks:
      liveness:
        initial_delay: 10
        period: 30
        timeout: 5
        failure_threshold: 2
      readiness:
        initial_delay: 5
        period: 5
        timeout: 3
  
  # Service configuration
  service:
    name: "madengine-dev-service"
    type: "NodePort"
    ports:
      - name: "http"
        port: 8080
        target_port: 8080
        protocol: "TCP"
        node_port: 30080
      - name: "metrics"
        port: 9090
        target_port: 9090
        protocol: "TCP"
        node_port: 30090
      - name: "debug"
        port: 5678
        target_port: 5678
        protocol: "TCP"
        node_port: 30678
  
  # Volume configuration
  volumes:
    shared_storage:
      type: "hostPath"
      path: "/tmp/madengine-dev-results"
      hostPath_type: "DirectoryOrCreate"
    data_storage:
      type: "hostPath"
      path: "/tmp/madengine-dev-data"
      hostPath_type: "DirectoryOrCreate"
  
  # Node selector
  node_selector:
    environment: "dev"
    accelerator: "gpu"
  
  # Tolerations for GPU nodes
  tolerations:
    - key: "nvidia.com/gpu"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "dev-environment"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

# Resource configuration
resources:
  memory_limit: "2Gi"  # Lower limits for dev
  memory_request: "1Gi"
  cpu_limit: "1"
  cpu_request: "0.5"
  gpu_limit: "1"

# GPU vendor specific configuration
nvidia:
  visible_devices: "0"  # Only use first GPU in dev
  driver_capabilities: "compute,utility"

amd:
  visible_devices: "0"
  enable_pre_vega: "1"
