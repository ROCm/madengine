#!/bin/bash
#SBATCH --job-name=madengine-{{ model_tag | replace(":", "-") | replace("_", "-") }}
#SBATCH --partition={{ partition | default("gpu") }}
#SBATCH --nodes={{ nodes | default(1) }}
#SBATCH --ntasks-per-node={{ tasks_per_node | default(1) }}
#SBATCH --gres=gpu:{{ gpu_count | default(1) }}
#SBATCH --time={{ time_limit | default("24:00:00") }}
#SBATCH --mem={{ memory | default("32G") }}
{% if account %}
#SBATCH --account={{ account }}
{% endif %}
{% if qos %}
#SBATCH --qos={{ qos }}
{% endif %}
{% if constraint %}
#SBATCH --constraint={{ constraint }}
{% endif %}
{% if exclusive %}
#SBATCH --exclusive
{% endif %}
#SBATCH --output={{ output_dir | default("logs") }}/madengine_{{ model_tag | replace(":", "-") | replace("_", "-") }}_%j.out
#SBATCH --error={{ output_dir | default("logs") }}/madengine_{{ model_tag | replace(":", "-") | replace("_", "-") }}_%j.err

# Job configuration
echo "=== SLURM Job Information ==="
echo "Job ID: $SLURM_JOB_ID"
echo "Job Name: madengine-{{ model_tag | replace(":", "-") | replace("_", "-") }}"
echo "Node: $SLURMD_NODENAME"
echo "Partition: {{ partition | default('gpu') }}"
echo "GPUs: {{ gpu_count | default(1) }}"
echo "Model Tag: {{ model_tag }}"
echo "============================="

# Load required modules
{% for module in modules %}
module load {{ module }}
{% endfor %}

# Set environment variables
export CUDA_VISIBLE_DEVICES=$SLURM_LOCALID
export OMP_NUM_THREADS={{ omp_num_threads | default(1) }}
{% for key, value in environment.items() %}
export {{ key }}="{{ value }}"
{% endfor %}

# Change to MAD workspace directory
cd {{ mad_workspace_path | default("/shared/madengine") }}

# Activate Python virtual environment
source {{ venv_path | default("venv") }}/bin/activate

# Create output directory for this specific model
MODEL_OUTPUT_DIR="{{ results_dir | default('results') }}/{{ model_tag | replace(":", "-") | replace("_", "-") }}_${SLURM_JOB_ID}"
mkdir -p "$MODEL_OUTPUT_DIR"

# Execute madengine-cli with the specific model tag
echo "Starting madengine execution for {{ model_tag }} at $(date)"

madengine-cli run \
    --manifest-file {{ manifest_file | default("build_manifest.json") }} \
    --tags "{{ model_tag }}" \
    --timeout {{ timeout | default(3600) }} \
    {% if registry %}--registry {{ registry }}{% endif %} \
    --live-output \
    --output-dir "$MODEL_OUTPUT_DIR" \
    {% if additional_args %}{{ additional_args }}{% endif %}

# Capture exit code
EXIT_CODE=$?

echo "Finished madengine execution for {{ model_tag }} at $(date) with exit code: $EXIT_CODE"

# Create result summary
cat > "$MODEL_OUTPUT_DIR/job_summary.json" << EOF
{
  "job_id": "$SLURM_JOB_ID",
  "model_tag": "{{ model_tag }}",
  "node": "$SLURMD_NODENAME",
  "start_time": "$(date -Iseconds)",
  "exit_code": $EXIT_CODE,
  "gpu_count": {{ gpu_count | default(1) }},
  "partition": "{{ partition | default('gpu') }}",
  "output_dir": "$MODEL_OUTPUT_DIR"
}
EOF

# Exit with the madengine exit code
exit $EXIT_CODE