[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[project]
name = "madengine"
dynamic = ["version"]
authors = [
  { name="Advanced Micro Devices", email="mad.support@amd.com" },
]
maintainers = [
  { name="Advanced Micro Devices", email="mad.support@amd.com" },
]
description = "AI Models automation and dashboarding CLI tool for running LLMs and Deep Learning models"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["AI", "machine-learning", "deep-learning", "LLM", "automation", "AMD", "ROCm", "GPU", "performance", "benchmarking"]
dependencies = [
  "pandas",
  "GitPython",
  "jsondiff",
  "sqlalchemy",
  "setuptools-rust",
  "paramiko",
  "mysql-connector-python",
  "pymysql",
  "tqdm",
  "typing-extensions",
  "pymongo",
  "toml",
  "numpy",
  "pynvml",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Testing",
  "Topic :: System :: Benchmark",
  "Topic :: System :: Hardware",
]

[project.scripts]
madengine = "madengine.mad:main"

[project.urls]
Homepage = "https://github.com/ROCm/madengine"
Issues = "https://github.com/ROCm/madengine/issues"

[project.extras]
dev = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
  "pytest-timeout",
  "pytest-mock",
  "pytest-asyncio",
]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md", 
    "/LICENSE",
    "/pyproject.toml",
]

[tool.hatch.build.targets.wheel]

[tool.hatch.build.targets.wheel.force-include]
"src/madengine/scripts" = "madengine/scripts"

[tool.hatch.build.targets.sdist.force-include]
"src/madengine/scripts" = "src/madengine/scripts"

[tool.hatch.version]
source = "versioningit"

[tool.versioningit.vcs]
method = "git"
default-tag = "v1.0.0"

[tool.versioningit.tag2version]
regex = "v(?P<version>.*)"

[tool.versioningit.format]
distance = "{base_version}.post{distance}+{vcs}{rev}"
dirty = "{base_version}+d{build_date:%Y%m%d}"
distance-dirty = "{base_version}.post{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"
